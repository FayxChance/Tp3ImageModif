\documentclass[a4paper,10pt]{article}
\usepackage[utf8]{inputenc}
\usepackage{listings}
\usepackage{graphicx}
\usepackage{subcaption}
\graphicspath{ {./images/} }
%opening
\title{Compte rendu TP2 : Programmation générique}
\date{10/11/20}
\author{Commandeur N. - Verdant B}

\begin{document}

\maketitle
\pagenumbering{gobble}
\newpage

  \pagenumbering{arabic}
  \section{Introduction}
  Pour compiler les sources, il suffit de faire un make. Chaque réponse fera l'affaire d'une section avec la commande correspondante.


  \section{Définition d'une classe pour représenter des images arbitraires}
  Utilisation de la classe générique Image2D pour représenter une image en niveau de gris :
  \begin{lstlisting}[language=Bash]
  $ ./testGrayLevelImage2D  
    5 5 5 5 5 5 5 5
    5 5 5 5 5 5 5 5
    5 5 5 5 5 5 5 5
    5 5 5 5 5 5 5 5
    5 5 5 5 5 5 5 5
    5 5 5 5 5 5 5 5
    5 5 5 5 5 5 5 5
    5 5 5 5 5 5 5 5
  \end{lstlisting}
  \section{Introduction des images couleurs}
  Utilisation de la classe générique Image2D pour représenter une image en couleur.
  \begin{lstlisting}[language=Bash]
  $ ./testColorImage2DBash
  255 0 255| 255 0 255| 255 0 255| 
  255 0 255| 255 0 255| 255 0 255| 
  255 0 255| 255 0 255| 255 0 255| 
  \end{lstlisting}
    \pagebreak
    \section{Premier itérateur sur images quelconques}
     Utilisation de la classe générique Image2D pour représenter une image en couleur, pour l'instant pas d'affichage.
  \begin{lstlisting}[language=Bash]
  $ ./testColorImage2D
  \end{lstlisting}
    \section{Un importeur / exporteur PBM générique}
    On va écrire une classe pour écrire et lire un fichier, en spécialisant pour la couleur et les nuances de gris. On va réutiliser la fonction permettant de créer l'image et l'écrire dans le fichier  \emph{colors.ppm}
    \begin{lstlisting}[language=Bash]
  $ ./testColorImage2D
  $ display colors.ppm
  \end{lstlisting}
  \begin{center}
    \includegraphics[scale=0.75]{colors}
    \end{center}
    \pagebreak
    \section{Premier test: on inverse les canaux rouge et bleu}
    Grâce à nos fonctions de lecture et écriture, on peut commencer à traiter les images. On va lire une image et écrire une nouvelle en changeant la couleur de chaque pixel en inversant le bleu et le rouge. Il faut donner une image en entrée et une image en sortie.
    \begin{lstlisting}[language=Bash]
  $ ./invert-blue-red patinoire.ppm patinoire-inv.ppm
  $ display patinoire-inv.ppm
  \end{lstlisting}
   \begin{figure}[h]
   \begin{subfigure}{0.6\textwidth}
    \includegraphics[width=1\linewidth, height=5cm]{patinoire}   
    \end{subfigure}
     \begin{subfigure}{0.6\textwidth}
    \includegraphics[width=1\linewidth, height=5cm]{patinoire-inv}   
    \end{subfigure}

    \end{figure}
    
    
    
\end{document}
